---
import { Icon } from 'astro-icon/components'
---

<footer>
  <section class="container">
    <p class="ping-me">
      Ping me for <span>cool</span> collaborations<br /> and front-end <span>magic ðŸ˜Ž</span>
      <!-- <br /><small>Let's chat about awesome projects, can't wait to connect!</small> -->
    </p>
    <ul>
      <li class="mail">
        <span
          ><i>saidalachgar.r@gmail.com</i>
          <Icon name="click-to-copy" width={100} height={100} />
          <small class="copy-message"></small>
        </span>
      </li>
      <li class="link">
        <a href=""><Icon name="arrow-top-right" width={18} height={18} />Linkedin</a>
      </li>
      <li class="link">
        <a href=""><Icon name="arrow-top-right" width={18} height={18} />Instagram</a>
      </li>
      <li class="link">
        <a href=""><Icon name="arrow-top-right" width={18} height={18} />CV / Resume</a>
      </li>
    </ul>
  </section>
</footer>

<script>
  const mail = document.querySelector('.mail i')
  const svg = document.querySelector('.mail svg')
  const copyMessage = document.querySelector('.mail .copy-message')
  mail.addEventListener('mousemove', (e) => {
    svg.style.top = e.clientY + 'px'
    svg.style.left = e.clientX + 'px'
  })
  mail?.addEventListener('click', () => {
    if (!navigator.clipboard) {
      return
    }
    navigator.clipboard.writeText(mail.innerText || mail.textContent).then(
      () => {
        copyMessage.textContent = '( copied! )'
      },
      () => {
        copyMessage.textContent = '( sorry copying to clipboard failed )'
      }
    )
    setTimeout(() => {
      copyMessage.textContent = ''
    }, 2000)
  })
</script>

<style lang="scss">
  footer {
    ul {
      display: flex;
      padding: 100px 0 60px;
      column-gap: 15px;
      align-items: center;
      .mail {
        flex: 1;
        i {
          font-size: 23px;
          font-family: var(--font-family-secondary);
          text-decoration: underline;
          position: relative;
          transform: skew(-10deg);
          cursor: none;
          margin-right: 10px;
          &:hover + svg {
            opacity: 1;
            scale: 1;
            animation: rotating 15s linear infinite;
          }
        }
        svg {
          position: absolute;
          opacity: 0;
          pointer-events: none;
          transition: opacity 0.2s ease, scale 0.2s ease;
          transform: translateX(-50%) translateY(-50%) rotate(4deg);
          scale: 0.5;
          top: 50%;
          left: 50%;
          will-change: transform;
        }
        small {
          transform: scale(1);
          opacity: 1;
          transition: opacity 0.2s ease, transform 0.2s ease;
          &:empty {
            opacity: 0;
            transform: scale(0.5);
          }
        }
      }
      .link a {
        font-size: 14px;
        font-weight: 700;
        padding: 15px;
        border: 1px solid rgb(255, 255, 255, 0.08);
        background-color: rgb(255, 255, 255, 0.08);
        transition: background-color 0.3s ease-in;
        border-radius: 28px;
        padding: 11px 15px;

        svg {
          margin-right: 6px;
          vertical-align: -4px;
        }

        &:hover {
          background-color: rgba(255, 255, 255, 0.15);
        }
      }
    }
    .ping-me {
      font-size: 25px;
      text-transform: uppercase;
      span {
        font-size: 33px;
        text-transform: lowercase;
        font-family: var(--font-family-secondary);
      }
      small {
        font-size: 20px;
        opacity: 0.6;
      }
    }
    @media (max-width: 655px) {
      .ping-me {
        font-size: 15px;
        span {
          font-size: 20px;
        }
      }

      ul {
        padding: 40px 0 60px;
        flex-wrap: wrap;
        row-gap: 50px;
        .link a {
          font-size: 10px;
        }
        .mail {
          width: 100%;
          flex: unset;
          i {
            font-size: 18px;
          }
        }
      }
    }
  }
  @keyframes rotating {
    from {
      transform: translateX(-50%) translateY(-50%) rotate(0deg);
    }
    to {
      transform: translateX(-50%) translateY(-50%) rotate(360deg);
    }
  }
</style>
