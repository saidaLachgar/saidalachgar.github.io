---
import presentation from '@/data/presentation'
import { Icon } from 'astro-icon/components'
import SkipToContent from '../components/SkipToContent.astro'
import TimeComponent from './TimeComponent.astro'
---

<header>
  <SkipToContent />
  <div class="menu container">
    <div class="logo">
      <a href="/" data-astro-prefetch="load"><Icon name="logo" width={87} height={87} /></a>
    </div>

    <nav class="navigation" aria-label="Main navigation desktop">
      <ul>
        <li class="menu-item">
          <a href="#about" data-label="identity">about</a>
        </li>
        <li class="menu-item">
          <a href="#services" data-label="magic">services</a>
        </li>
        <li class="menu-item">
          <a href="#projects" data-label="adventures">projects</a>
        </li>
        <li class="menu-item">
          <a href="#blog" data-label="thoughts">blog</a>
        </li>
        <li class="menu-item">
          <a href="#playground" data-label="experiment">playground</a>
        </li>
      </ul>
    </nav>

    <div class="info">
      <ul class="coordinate">
        <li>
          <button
            id="book-a-call"
            data-cal-namespace="15min"
            data-cal-config='{"layout":"month_view"}'
            data-cal-link="saidalachgar/15min">Let's Collaborate â€“ Book a Call</button
          >
        </li>
        <li><p>{presentation.location} <TimeComponent /></p></li>
      </ul>
      <ul class="contact">
        <li><a href={`mailto:${presentation.mail}`}>{presentation.mail}</a></li>
        <li><a href={`sms:${presentation.sms_link}`}>text {presentation.sms}</a></li>
      </ul>
    </div>
  </div>
</header>

<!-- Cal element-click embed code begins -->
<script type="text/javascript">
  ;(function (C, A, L) {
    let p = function (a, ar) {
      a.q.push(ar)
    }
    let d = C.document
    C.Cal =
      C.Cal ||
      function () {
        let cal = C.Cal
        let ar = arguments
        if (!cal.loaded) {
          cal.ns = {}
          cal.q = cal.q || []
          d.head.appendChild(d.createElement('script')).src = A
          cal.loaded = true
        }
        if (ar[0] === L) {
          const api = function () {
            p(api, arguments)
          }
          const namespace = ar[1]
          api.q = api.q || []
          if (typeof namespace === 'string') {
            cal.ns[namespace] = cal.ns[namespace] || api
            p(cal.ns[namespace], ar)
            p(cal, ['initNamespace', namespace])
          } else p(cal, ar)
          return
        }
        p(cal, ar)
      }
  })(window, 'https://app.cal.com/embed/embed.js', 'init')
  Cal('init', '15min', { origin: 'https://cal.com' })
  Cal.ns['15min']('ui', {
    theme: 'dark',
    styles: { branding: { brandColor: '#000000' } },
    hideEventTypeDetails: true,
    layout: 'month_view',
  })
</script>
<!-- Cal element-click embed code ends -->

<style lang="scss">
  header {
    top: 0;
    padding-top: var(--default-space);
    position: sticky;
    text-transform: lowercase;
    z-index: 1000;
    .navigation ul {
      width: max-content;
      li {
        opacity: 0;
        animation: reveal 1.6s cubic-bezier(0.77, 0, 0.175, 1) 0s forwards;
        &:nth-child(2) {
          animation-delay: 0.3s;
        }
        &:nth-child(3) {
          animation-delay: 0.6s;
        }
        &:nth-child(4) {
          animation-delay: 0.9s;
        }
        &:nth-child(5) {
          animation-delay: 1.2s;
        }
      }
      a {
        transition: all 0.6s ease;
        display: block;
        position: relative;
        overflow: hidden;
        height: 17px;
        width: max-content;
        &::before {
          content: attr(data-label);
          display: block;
          padding-right: 15px;
          transition: margin-top 0.6s ease;
          margin-top: -17px;
          background: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' width='9' height='9' fill='none' viewBox='0 0 9 9'%3e%3cpath fill='%23fff' d='m9 4.608-.75-.732L5.03 7.02V0H3.97v7.02L.752 3.876 0 4.608 4.5 9 9 4.608Z'%3e%3c/path%3e%3c/svg%3e")
            center right no-repeat;
        }
      }
      &:hover a {
        opacity: 0.5;
      }
      a:hover {
        opacity: 1;
        &::before {
          margin-top: 0;
        }
      }
    }
    .contact li {
      opacity: 0;
      animation: reveal 1.6s cubic-bezier(0.77, 0, 0.175, 1) 0.9s forwards;
      &:nth-child(2) {
        animation-delay: 1.2s;
      }
    }
    .coordinate button,
    .contact a {
      transition: transform 0.6s ease;
      display: inline-block;
      background-color: transparent;
      color: #fff;
      font-family: inherit;
      &:hover {
        transform: translateX(5px);
      }
    }
    .coordinate li {
      opacity: 0;
      animation: reveal 1.6s cubic-bezier(0.77, 0, 0.175, 1) 0.6s forwards;
      &:nth-child(2) {
        animation-delay: 0.9s;
      }
    }
    .menu {
      display: flex;
      justify-content: space-between;
    }
    .logo {
      width: 75%;
      opacity: 0;
      animation: reveal 1.6s cubic-bezier(0.77, 0, 0.175, 1) 0s forwards;
      svg {
        animation: rotating 50s linear infinite;
      }
    }
    .info {
      min-width: 160px;
      width: auto;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
    }
    .navigation {
      flex: 1;
      min-width: 100px;
    }
    @media (max-width: 655px) {
      .logo {
        width: 100%;
        svg {
          margin-left: auto;
          height: 50px;
          width: auto;
        }
      }
      .navigation,
      .info {
        display: none;
      }
    }
  }
</style>

<script>
  const title = document.title
  let interval
  // Event listener for visibility change
  document.addEventListener('visibilitychange', function () {
    if (document.hidden) {
      setTimeout(() => {
        if (document.hidden) {
          // Function to update tab title with ellipsis animation
          let ellipsisCount = 1
          interval = setInterval(function () {
            const ellipsis = 'Zzzz' + '.'.repeat(ellipsisCount - 1)
            document.title = ellipsis
            ellipsisCount = (ellipsisCount % 3) + 1 // Loop between 1, 2, 3
          }, 1000) // Adjust the interval as needed
        }
      }, 60000)
    } else {
      // Page is visible again, revert to default favicon
      clearInterval(interval)
      document.title = 'Welcome Back, Explorer!'
      setTimeout(() => {
        setTimeout(() => (document.title = title), 1000)
      }, 1000)
    }
  })
</script>
