---
import video from '../assets/img/presentation.mp4'
import poster from '../assets/img/video-poster.png'
import { Icon } from 'astro-icon/components'
---

<section class="hero container">
  <div class="visually-hidden">
    <h1>Experienced Frontend Web Developer - Saida Lachgar</h1>
    <p>
      Welcome to my digital realm! As a seasoned frontend web developer, I embark on a journey to redefine the online
      experience. My expertise lies in crafting pixel-perfect and responsive websites, blending art with functionality.
      Beyond the code, I'm driven by a passion for innovation, breaking digital barriers, and constructing inclusive
      online spaces. Whether transforming designs into reality or delving into backend intricacies, I thrive on
      ambitious projects that push the boundaries of digital creativity.
    </p>
  </div>
  <div class="content">
    <div class="title">
      <p><span>Frontend</span></p>
      <p><span>developer &</span></p>
      <p><span>full-stack</span></p>
      <p><span>capable</span></p>
    </div>
    <div class="presentation">
      <div class="video" id="play-video">
        <!-- <video src={video} width="307" height="307" id="video" playsinline poster={poster.src}></video>
        <button>
          <Icon name="play" width={73} height={73} />
        </button> -->
      </div>
      <p class="caption">expert in pixel-perfect<br />websites development</p>
    </div>
  </div>
</section>

<script>
  // const playVideo = document.querySelector('#play-video')
  // const video = document.querySelector('#video')
  // playVideo.addEventListener('click', () => (video.paused ? video.play() : video.pause()))
  // video.addEventListener('play', () => video.classList.add('playing'))
  // video.addEventListener('pause', () => video.classList.remove('playing'))
  // video.addEventListener('ended', () => video.classList.remove('playing'))
</script>

<style lang="scss">
  @use '../assets/scss/base/mixins' as *;
  .hero {
    position: relative;
    padding-top: 150px;
    .content {
      display: flex;
      align-items: stretch;
    }
    .title {
      flex: 1;
      text-transform: uppercase;
      font-weight: 500;
      line-height: 1.1;

      @include clamp(font-size, 60px, 9vw, 170px);
      span {
        display: block;
        animation: reveal 1.6s cubic-bezier(0.77, 0, 0.175, 1) 0s forwards;
        opacity: 0;
      }
      p {
        overflow: hidden;
        &:nth-child(2) span {
          animation-delay: 0.6s;
        }
        &:nth-child(3) span {
          animation-delay: 1s;
        }
        &:nth-child(4) span {
          animation-delay: 1.4s;
        }
      }
    }
    .caption {
      position: sticky;
      bottom: var(--default-space);
      opacity: 0;
      animation: reveal 1.6s cubic-bezier(0.77, 0, 0.175, 1) 1.4s forwards;
    }

    .visually-hidden {
      position: absolute;
      width: 1px;
      height: 1px;
      margin: -1px;
      padding: 0;
      overflow: hidden;
      clip: rect(0, 0, 0, 0);
      border: 0;
    }
    .presentation {
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      align-items: flex-end;
    }
    .video {
      position: sticky;
      top: 150px;
      margin-bottom: 100px;
      z-index: 1;
      opacity: 0;
      animation: reveal 1.6s cubic-bezier(0.77, 0, 0.175, 1) 1.4s forwards;
      &:hover button {
        transform: scale(1.1);
      }
    }
    video {
      border-radius: 100%;
      max-width: 25vw;
      cursor: pointer;
      &.playing + button {
        transform: scale(0.5);
        opacity: 0;
        pointer-events: none;
      }
    }
    button {
      background: transparent;
      margin: -42px auto;
      display: block;
      transition: all 0.2s ease;
      position: relative;
      z-index: 2;
      color: #000;
    }
    @media (max-width: 860px) {
      padding-top: 40px;
      .title {
        @include clamp(font-size, 39px, 11vw, 170px);
      }

      .caption {
        position: static;
      }
      .content {
        flex-direction: column;
        row-gap: 40px;
      }
      .presentation {
        align-items: flex-start;
      }

      .video {
        align-self: center;
        position: static;
        margin-bottom: 70px;
        button {
          margin: -30px auto;
          svg {
            width: 50px;
            height: auto;
          }
        }
        video {
          max-width: 45vw;
        }
      }
    }
  }
</style>
