---
import { projects, type Project } from '@/data/projects'
import { Icon } from 'astro-icon/components'
---

<section class="work container" id="projects">
  <div class="header" data-reveal>
    <p class="subtitle">Area of Expertise</p>
    <h2 class="title">Selected<br />Works</h2>
    <p class="description">
      Over the past 4 years, I've had the privilege to work on so many cool projects, iâ€™ve worked in areas including
      APIs and Integration, responsive web design, eCommerce, CMS, SEO... Here's a few.
    </p>
  </div>

  <div class="content">
    <ul>
      {
        projects.map((project: Project) => (
          <li data-reveal>
            <div class="project">
              <p class="name">
                <>
                  <span>
                    {project.name} - {project.platform}
                  </span>
                  <i />
                </>
              </p>
              <span class="role">{project.role}</span>
              <span class="year">{project.year}</span>
            </div>
            <div class="description">
              <p>
                <b>STATUS: </b>
                {project.status}
              </p>
              <p>
                <b>DESCRIPTION: </b>
                {project.info}
              </p>
              {project.site && (
                <a class="link" href={'https://' + project.site}>
                  {project.site}
                  <Icon name="arrow-top-right" width={16} height={16} />
                </a>
              )}
            </div>
          </li>
        ))
      }
    </ul>
    <p class="more" data-reveal>
      <Icon name="arrow-down" width={18} height={18} />
      <u>See all projects</u>
      <sup>({projects.length})</sup>
    </p>
  </div>
</section>

<script>
  // show more
  const more = document.querySelector('.work .more')
  const list = document.querySelector('.work ul')
  more?.addEventListener('click', () => {
    more.remove()
    list?.classList.add('active')
  })

  // show details
  document.querySelectorAll('.work .project').forEach((project) => {
    project.addEventListener('click', () => {
      let lastActive = document.querySelector('.work li.show')
      lastActive && lastActive.classList.remove('show')
      project.parentElement.classList.add('show')
      list.classList.add('hasActiveChild')
    })
  })
</script>

<style lang="scss">
  .work {
    position: relative;
    margin-top: 150px;
    margin-bottom: 150px;
    z-index: 100;
    .content {
      max-width: 760px;
    }
    .subtitle {
      font-size: 11px;
    }
    .title {
      font-size: 64px;
      margin: 30px 0;
      font-family: var(--font-family-secondary);
    }
    .description {
      font-size: 13px;
      margin: 0 0 70px;
      max-width: 478px;
      p {
        margin-bottom: 6px;
      }
      b {
        font-weight: bold;
      }
    }
    .more {
      font-size: 18px;
      display: flex;
      column-gap: 7px;
      align-items: center;
      text-transform: uppercase;
      margin: 20px auto 0;
      width: max-content;
      cursor: pointer;
      sup {
        margin-top: -10px;
        font-size: 12px;
      }
      svg {
        margin-top: 2px;
      }
    }
    ul {
      li:hover,
      li.show {
        z-index: 2;
        position: relative;
      }
      &:hover,
      &.hasActiveChild {
        &::after {
          opacity: 0.8;
        }
        li.active {
          opacity: 0.5;
        }
      }
      &:not(.active) {
        max-height: 540px;
        overflow: hidden;
        position: relative;
        &::after {
          content: '';
          width: 100%;
          height: 100%;
          pointer-events: none;
          background: linear-gradient(0deg, rgba(0, 0, 0, 1) 0%, rgba(0, 0, 0, 0.1) 100%);
          position: absolute;
          left: 0;
          top: 0;
          z-index: 1;
          transition: opacity 0.6s ease;
        }
      }

      li {
        transition: opacity 0.6s ease;
        &.active:hover,
        &.show {
          opacity: 1 !important;
        }
        &:not(.show) .description {
          display: none;
        }
        .description {
          margin-bottom: 15px;
        }
      }
    }
    .project {
      display: grid;
      align-items: center;
      column-gap: 10px;
      cursor: pointer;
      padding: 20px 0;
      grid-template-columns: minmax(0, 1fr) repeat(2, auto);
    }
    .name {
      font-size: 18px;
      font-weight: 500;
      display: flex;
      align-items: center;
      column-gap: 10px;
      i {
        flex: 1;
        height: 1px;
        background-color: rgb(255, 255, 255, 0.1);
      }
    }
    .role {
      font-size: 13px;
    }
    .year {
      font-size: 11px;
    }

    .link {
      font-size: 12px;
      padding: 6px 15px 8px;
      display: block;
      width: max-content;
      margin-top: 15px;
      font-weight: 700;
      border: 1px solid rgb(255, 255, 255, 0.08);
      background-color: rgb(255, 255, 255, 0.08);
      transition: background-color 0.3s ease-in;
      border-radius: 28px;

      svg {
        margin-left: 4px;
        vertical-align: -3px;
        margin-right: -2px;
      }

      &:hover {
        background-color: rgba(255, 255, 255, 0.1);
      }
    }
    @media (max-width: 655px) {
      margin-top: 60px;
      margin-bottom: 40px;
    }
  }
</style>
