---
import { Image } from 'astro:assets'
import { type CollectionEntry, getCollection } from 'astro:content'
import SocialIcon from '@/components/social-icons/index.astro'
import RootLayout from './RootLayout.astro'
import { sortBlogPosts } from '../functions'
import { ITEMS_PER_PAGE } from '../consts'
import { useTranslations } from '@/i18n'
import Link from '@/components/Link.astro'

const t = useTranslations()

interface Props {
  content: CollectionEntry<'authors'>['data']
  slug: string
}

const { name, avatar, occupation, company, email, github, linkedin, twitter, shortBio } = Astro.props.content

// Get the author's posts
const authorPosts = await getCollection('blog', ({ data: { authors, draft } }) => {
  return !draft && authors.some((author) => author.slug === Astro.props.slug)
})
  .then(sortBlogPosts)
  .then((posts) => {
    return posts.slice(0, ITEMS_PER_PAGE).map((post) => {
      return { title: post.data.title, slug: post.slug }
    })
  })
---

<RootLayout title={name} description={shortBio}>
  <div class="divide-y divide-gray-200 dark:divide-gray-700">
    <div class="space-y-2 pb-8 pt-6 md:space-y-5">
      <h1
        class="text-3xl font-extrabold leading-9 tracking-tight text-gray-900 dark:text-gray-100 sm:text-4xl sm:leading-10 md:text-6xl md:leading-14"
      >
        {t('layouts.authorLayout.aboutAuthor', { name })}
      </h1>
    </div>
    <div class="items-start space-y-2 xl:grid xl:grid-cols-3 xl:gap-x-8 xl:space-y-0">
      <div class="flex flex-col items-center space-x-2 pt-8">
        {
          avatar && (
            <Image src={avatar} alt="avatar" width={192} height={192} class="h-48 w-48 rounded-2xl drop-shadow-md" />
          )
        }
        <h2 class="pb-2 pt-4 text-2xl font-bold leading-8 tracking-tight">
          {name}
        </h2>
        <div class="text-gray-500 dark:text-gray-400">{occupation}</div>
        <div class="text-gray-500 dark:text-gray-400">{company}</div>
        <div class="flex space-x-3 pt-6">
          {email && <SocialIcon kind="mail" href={`mailto:${email}`} />}
          {github && <SocialIcon kind="github" href={github} />}
          {linkedin && <SocialIcon kind="linkedin" href={linkedin} />}
          {twitter && <SocialIcon kind="twitter" href={twitter} />}
        </div>
      </div>
      <div class="xl:col-span-2 max-w-none d-flex">
        <div class="prose pb-8 pt-8 dark:prose-invert">
          <slot />
        </div>
        {
          authorPosts.length > 0 && (
            <div class="pt-8">
              <h2 class="text-2xl font-bold leading-8 tracking-tight">{t('layouts.authorLayout.latestPosts')}</h2>
              <ul class="space-y-4 mt-4">
                {authorPosts.map(({ slug, title }) => (
                  <li>
                    <Link href={`/blog/${slug}`}>{title}</Link>
                  </li>
                ))}
              </ul>
            </div>
          )
        }
      </div>
    </div>
  </div>
</RootLayout>
