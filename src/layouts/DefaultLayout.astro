---
import '../assets/scss/globals.scss'
import SiteMeta from '../components/SiteMeta.astro'
import Header from '../components/Header.astro'
import Footer from '../components/Footer.astro'

const { title, description, url, image = '/social-preview-image.png' } = Astro.props
---

<html lang="en" dir="ltr">
  <head>
    <SiteMeta title={title} description={description} url={url ?? Astro.site} image={image} />
  </head>
  <body style="background-color: #000;">
    <div id="loader" style="display: none;"></div>
    <div id="main">
      <Header />
      <main id="main-content" transition:animate="fade">
        <slot />
        <i id="overlay"></i>
      </main>
      <Footer />
    </div>
    <!-- <div id="revealPoint">Reveal Point</div> -->
    <style lang="scss" is:global>
      #overlay,
      #loader {
        width: 100vw;
        position: fixed;
        bottom: 0;
        left: 0;
      }
      #loader {
        color: #fff;
        display: flex;
        height: 100vh;
        background-color: #000;
        justify-content: center;
        align-items: center;
        font-size: 20px;
        z-index: 100;
      }
      #overlay {
        height: 25vh;
        pointer-events: none;
        background: linear-gradient(0deg, rgba(0, 0, 0, 0.5) 0%, rgba(0, 0, 0, 0) 100%);
        z-index: 99;
      }
      [data-reveal] {
        position: relative;
        top: 20px;
        scale: 0.94;
        opacity: 0;
        transition: all 0.9s ease;
        &.active {
          opacity: 1;
          top: 0;
          scale: 1;
        }
      }
    </style>
    <script>
      // greeting loading
      const greetings = [
        'Hello',
        'Hola',
        'Bonjour',
        'Hallo',
        'Ciao',
        'こんにちは',
        '안녕하세요',
        '您好',
        'Здравствуйте',
        'Olá',
        'مرحبا',
        'नमस्ते',
      ]

      let currentGreeting = 0
      const greetingElement = document.getElementById('loader')

      function changeGreeting() {
        greetingElement.textContent = greetings[currentGreeting]
        currentGreeting = (currentGreeting + 1) % greetings.length
      }

      const intervalId = setInterval(changeGreeting, 120)

      setTimeout(function () {
        clearInterval(intervalId)
        document.getElementById('loader').style.display = 'none'
        document.getElementById('main').style.display = 'block'
      }, 1500)

      // reveal
      document.body.addEventListener('scroll', () => {
        var revealPoint = 200
        var revealElement = document.querySelectorAll('[data-reveal]')
        for (var i = 0; i < revealElement.length; i++) {
          var windowHeight = window.innerHeight
          var revealTop = revealElement[i].getBoundingClientRect().top
          if (revealTop < windowHeight - revealPoint) {
            revealElement[i].classList.add('active')
          } else {
            revealElement[i].classList.remove('active')
          }
        }
      })
    </script>
  </body>
</html>
