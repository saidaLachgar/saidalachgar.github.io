---
import '../assets/scss/globals.scss'
import type { CollectionEntry } from 'astro:content'
import SiteMeta from '../components/SiteMeta.astro'
import Header from '../components/Header.astro'
import Footer from '../components/Footer.astro'

import { useTranslations } from '@/i18n'

const t = useTranslations()

type Props = {
  title: string
  description: string
  titleTemplate?: string
  robots?: string
  article?: {
    publishedTime: Date
    modifiedTime?: Date
    authors: string[]
    authorTwitter?: string
    tags: string[]
    cover: CollectionEntry<'blog'>['data']['cover']
  }
}
---

<html lang={t('siteMetadata.language')} dir="ltr">
  <head>
    <SiteMeta {...Astro.props} />
  </head>
  <body style="background-color: #000;">
    <div id="loader" style="display: none;"></div>
    <div id="main">
      <Header />
      <main id="main-content" transition:animate="fade">
        <slot />
        <i id="overlay"></i>
      </main>
      <Footer />
    </div>
    <!-- <div id="revealPoint">Reveal Point</div> -->
    <script>
      document.addEventListener('click', (event) => {
        if (event.target.closest('a')) {
          const loader = document.getElementById('loader')
          if (loader) {
            loader.classList.remove('hidden')
          }
        }
      })
      document.addEventListener('astro:page-load', () => {
        const loader = document.getElementById('loader')
        if (loader) {
          loader.classList.add('hidden')
        }
        // greeting loading
        const greetings = [
          'Hello',
          'Hola',
          'Bonjour',
          'Hallo',
          'Ciao',
          'こんにちは',
          '안녕하세요',
          '您好',
          'Здравствуйте',
          'Olá',
          'مرحبا',
          'नमस्ते',
        ]

        let currentGreeting = 0
        const greetingElement = document.getElementById('loader')

        function changeGreeting() {
          greetingElement.textContent = greetings[currentGreeting]
          currentGreeting = (currentGreeting + 1) % greetings.length
        }

        const intervalId = setInterval(changeGreeting, 120)

        setTimeout(function () {
          clearInterval(intervalId)
          document.getElementById('loader').style.display = 'none'
          document.getElementById('main').style.display = 'block'
        }, 1500)

        // reveal
        document.body.addEventListener('scroll', () => {
          var revealPoint = 200
          var revealElement = document.querySelectorAll('[data-reveal]')
          for (var i = 0; i < revealElement.length; i++) {
            var windowHeight = window.innerHeight
            var revealTop = revealElement[i].getBoundingClientRect().top
            if (revealTop < windowHeight - revealPoint) {
              revealElement[i].classList.add('active')
            } else {
              revealElement[i].classList.remove('active')
            }
          }
        })
      })
    </script>
  </body>
</html>
